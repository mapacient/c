#==========================================
# URL: https://github.com/wklken/k-tmux
# Author:  wklken
# Version: 0.1.1
# Email: wklken@yeah.net
# ReadMe: README.md
# Donation: http://www.wklken.me/pages/donation.html
# Last_modify: 2015-08-06
#==========================================
# Dependecny:
#    1. brew install reattach-to-user-namespace
#    2. gem install tmuxinator
#    3. vim: christoomey/vim-tmux-navigator


#--------------------------- base config begin -------------------------------

setw -g xterm-keys on
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
set -gq status-utf8 on                             # enable utf-8
set-option -g default-terminal "screen-256color"  # use 256 colors
set-option -g history-limit 1000                # scrollback buffer n lines
set-option -g display-time 1000
set-option -g repeat-time 1000
set-window-option -g display-panes-time 5000
set-option -g repeat-time 1000                       # Allow the arrow key to be used immediately after changing windows

set-option -g renumber-windows on                 # window 0, 1, 2, remove 1, renumber to 0, 1

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix
# make `ctrl+a ctrl+a` to move to beginning of the line
bind a send-prefix


# -------------------------------- session begin --------------------------------
bind -r ( switch-client -p
bind -r ) switch-client -n
# -------------------------------- session end --------------------------------

# -------------------------------- window begin --------------------------------
set-window-option -g other-pane-height 5
set-window-option -g other-pane-width 80

bind-key c new-window
bind-key n next-window
bind-key p previous-window
# bind-key space next-window
# bind-key bspace previous-window

unbind r
bind-key r rotate-window


# -------------------------------- window end --------------------------------

# -------------------------------- pane begin --------------------------------
unbind '"'
unbind %
unbind-key v
bind-key v split-window -h
unbind-key s
bind-key s split-window -v

unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l
bind-key l select-pane -R
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"


# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 7
bind J resize-pane -D 7
bind K resize-pane -U 7
bind L resize-pane -R 7

# layout
# [prefix-space]
# bind-key + select-layout main-horizontal
# bind-key = select-layout main-vertical

# -------------------------------- pane end --------------------------------

# -------------------------------- move/copy/paste begin --------------------------------
# use vi mode
setw -g mode-keys vi

bind-key [ copy-mode
bind-key ] paste-buffer

# Copy and paste like in vim
unbind p
bind p paste-buffer


# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# for osx
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
# -------------------------------- move/copy/paste end --------------------------------


# -------------------------------- status line begin  --------------------------------

set -g status-bg 'black'
set -g status-fg '#ff3300'

set -g status-interval 1
set -g status-left-length 35
set -g status-right-length 30

set-option -g status-justify centre
set-option -g status-left '#[fg=colour9]wagstaff'
setw -g automatic-rename on
set-window-option -g window-status-current-format '#[fg=colour208]%H:%M:%S'
set -g status-right "#[fg=colour9]%a %m/%d"
#208 is beautiful orange
set -g pane-border-format '#{?pane_active, #[fg=colour9] #{pane_index}  #[fg=colour208]#{pane_current_command} #{pane_current_path} ,#[fg=colour9] #{pane_index} }'
set -g pane-border-status bottom
